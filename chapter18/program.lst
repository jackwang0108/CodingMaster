     1                                  ; 常量声明
     2                                  NUL equ 0x00
     3                                  CHARFONT equ 0x07
     4                                  VIDEOMEM equ 0xb800
     5                                  STRLEN equ 0xffff
     6                                  
     7                                  section head align=16 vstart=0
     8                                      ; Length    Address
     9                                      ; 4B        0x00
    10 00000000 [00000000]                  Size dd ProgramEnd
    11                                  
    12                                      SegmentAddr:
    13                                          ; Length    Address
    14                                          ; 4B        0x04
    15 00000004 [00000000]                      CodeSeg dd section.code.start   ; nasm提供的伪操作
    16                                          ; 4B        0x08
    17 00000008 [00000000]                      DataSeg dd section.data.start
    18                                          ; 4B        0x0c
    19 0000000C [00000000]                      StackSeg dd section.stack.start
    20                                  
    21                                      SegmentNum:
    22                                          ; Length    Address
    23                                          ; 1B        0x10
    24 00000010 03                              SegNum db (SegmentNum - SegmentAddr) / 4
    25                                  
    26                                      ; 程序入口 = 段地址:偏移地址
    27                                          ; Length    Address
    28                                          ; 2B        0x11
    29 00000011 [0000]                      Enrty dw Main
    30                                          ; 4B        0x13
    31 00000013 [00000000]                      dd section.code.start
    32                                  
    33                                  section code align=16 vstart=0
    34                                      Main:
    35 00000000 A1[0800]                        mov ax, [DataSeg]
    36 00000003 8ED8                            mov ds, ax
    37 00000005 31F6                            xor si, si
    38 00000007 E80200                          call PrintString
    39                                  
    40 0000000A EBFE                            MainEnd: jmp MainEnd
    41                                  
    42                                  
    43                                      ; 打印字符串的函数
    44                                      PrintString:
    45                                          .setup:
    46                                          ; 保存通用寄存器
    47 0000000C 50                              push ax
    48 0000000D 53                              push bx
    49 0000000E 51                              push cx
    50 0000000F 52                              push dx
    51 00000010 56                              push si
    52 00000011 57                              push di
    53 00000012 8CC0                            mov ax, es
    54 00000014 50                              push ax
    55                                  
    56                                          ; 显存地址
    57 00000015 B800B8                          mov ax, VIDEOMEM
    58 00000018 8EC0                            mov es, ax
    59 0000001A 31FF                            xor di, di
    60                                  
    61                                          ; 字符属性, 黑底白字
    62 0000001C B707                            mov bh, CHARFONT
    63 0000001E B9FFFF                          mov cx, STRLEN
    64                                  
    65                                          ; 输出单个字符
    66                                          .printchar:
    67                                              ; 读字符
    68 00000021 3E8A1C                              mov bl, [ds:si]
    69 00000024 46                                  inc si
    70                                              ; 写显存
    71 00000025 26881D                              mov [es:di], bl
    72                                              ; 写字符属性
    73 00000028 47                                  inc di
    74 00000029 26883D                              mov [es:di], bh
    75 0000002C 47                                  inc di
    76 0000002D 80FB00                              cmp bl, NUL
    77 00000030 7402                                jz .return
    78 00000032 E2ED                                loop .printchar
    79                                          .return:
    80 00000034 58                                  pop ax
    81 00000035 8EC0                                mov es, ax
    82 00000037 5F                                  pop di
    83 00000038 5E                                  pop si
    84 00000039 5A                                  pop dx
    85 0000003A 59                                  pop cx
    86 0000003B 5B                                  pop bx
    87 0000003C 58                                  pop ax
    88 0000003D C3                                  ret
    89                                  section data align=16 vstart=0
    90 00000000 48656C6C6F2C204920-         Hell db "Hello, I come from program on hard disk sector 1, loaded by bootloader"
    90 00000009 636F6D652066726F6D-
    90 00000012 2070726F6772616D20-
    90 0000001B 6F6E20686172642064-
    90 00000024 69736B20736563746F-
    90 0000002D 7220312C206C6F6164-
    90 00000036 656420627920626F6F-
    90 0000003F 746C6F61646572     
    91                                  
    92                                  section stack align=16 vstart=0
    93 00000000 <res 80h>                   resb 128
    93          ******************       warning: uninitialized space declared in stack section: zeroing [-w+zeroing]
    94                                  
    95                                  section end align=16 
    96                                      ProgramEnd:
